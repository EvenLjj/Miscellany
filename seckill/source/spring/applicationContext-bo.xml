<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop 		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx       	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	>	
	<!-- 加载参数文件 -->
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	
	<!-- 声明对 @Autowired注解进行解析 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	
	<context:annotation-config />
	
	<context:component-scan  base-package="com.evenliu.*"></context:component-scan>
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">			
		<property name="driverClassName" value="${jdbc.driverClass}" />		
		<property name="url" value="${jdbc.base.url}" />	
		<property name="username" value="${jdbc.base.username}" />
		<property name="password" value="${jdbc.base.password}" />
		<!-- 连接池的私有属性 -->
		<property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultReadOnly" value="${jdbc.defaultReadOnly}"/>
        <!-- 关闭连接后不自动提交 -->
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
	</bean>
	
	<!-- 约定大于配置 -->
	<!-- Mybatis和Spring整合的配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
			
		<!-- 配置MyBatis的全局配置文件 -->	
		<property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
		<!-- 扫描配置xml -->
		<property name="mapperLocations" value="classpath*:com/evenliu/db/mapperxml/**/*.xml" />
		<!-- 扫描实体类 -->
		<property name="typeAliasesPackage" value="com.evenliu.db.eneity.**" />		
	</bean>  
	
	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入Spring容器中 -->
	<bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<!-- 注入sqlSessionFactory，采取BeanName防止jdbc配置文件没加载导致空值的问题 -->
  		<property name="basePackage" value="com.evenliu.db.dao.**" />
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>	

	
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- RedisDao -->
	<context:property-placeholder location="classpath:config/system.properties" />
	<bean id="redisDao" class="com.evenliu.db.dao.cache.RedisDao">
		<constructor-arg index="0" value="127.0.0.1"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
</beans>